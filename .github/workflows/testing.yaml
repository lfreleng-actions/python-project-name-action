---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action üß™"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Action Testing"
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Perform setup prior to running test(s)
      - name: "Checkout sample project repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "lfreleng-actions/test-python-project"
          path: "test-python-project"

      - name: "Run Action: ${{ github.repository }}"
        id: testing
        uses: ./
        with:
          path_prefix: "test-python-project/"

      - name: "Validate Action Output: ${{ github.repository }}"
        shell: bash
        run: |
          # Validate Action Output
          if [ "${{ steps.testing.outputs.python_project_file }}" \
            != "pyproject.toml" ]; then
            echo "Unexpected return value for: python_project_file ‚ùå"
            echo "Returned: ${{ steps.testing.outputs.python_project_file }}"
            echo "Expected: pyproject.toml"
            ERROR="true"
          fi
          if [ "${{ steps.testing.outputs.python_project_name }}" \
            != "lfreleng-test-python-project" ]; then
            echo "Unexpected return value for: python_project_name ‚ùå"
            echo "Returned: ${{ steps.testing.outputs.python_project_name }}"
            echo "Expected: lfreleng-test-python-project"
            ERROR="true"
          fi
          if [ "${{ steps.testing.outputs.python_package_name }}" \
            != "lfreleng_test_python_project" ]; then
            echo "Unexpected return value for: python_package_name ‚ùå"
            echo "Returned: ${{ steps.testing.outputs.python_project_name }}"
            echo "Expected: lfreleng_test_python_project"
            ERROR="true"
          fi
          if [ "$ERROR" != "true" ]; then
            echo "All output tests passed ‚úÖ"
          else
            echo "At least one output test failed ‚ùå"
            exit 1
          fi
